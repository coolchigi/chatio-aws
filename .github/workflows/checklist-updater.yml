name: Update Issue Checklist

on:
  push:
    branches:
      - main

jobs:
  update-checklist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Parse commits and update checklist
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const commits = context.payload.commits;

            for (const commit of commits) {
              // Extract issue number
              const issueMatch = commit.message.match(/#(\d+)/);
              if (!issueMatch) continue;
              const issue_number = parseInt(issueMatch[1], 10);

              // Extract all item keywords from commit message
              const itemMatches = [...commit.message.matchAll(/item:([^\n\r]+)/gi)].map(m => m[1].trim().toLowerCase());
              if (itemMatches.length === 0) continue;

              console.log(`Commit found for issue #${issue_number}, items:`, itemMatches);

              // Get current issue body
              const { data: issue } = await github.rest.issues.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number
              });

              let body = issue.body;
              let updated = false;

              for (const keyword of itemMatches) {
                // Find matching checklist lines (case-insensitive, partial)
                const lines = body.split("\n");
                for (let i = 0; i < lines.length; i++) {
                  const line = lines[i];
                  if (/^- \[ \]/.test(line) && line.toLowerCase().includes(keyword)) {
                    lines[i] = line.replace("- [ ]", "- [x]");
                    updated = true;
                    console.log(`✔ Marked "${line.trim()}" as complete`);
                  }
                }
                body = lines.join("\n");
              }

              if (updated) {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number,
                  body
                });
                console.log(`✅ Issue #${issue_number} updated successfully`);
              } else {
                console.log(`⚠ No matching unchecked items found for: ${itemMatches.join(", ")}`);
              }
            }
